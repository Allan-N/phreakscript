name: Main CI

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master ]
  # Retest weekly to ensure nothing has broken
  schedule:
    - cron: '0 4 * * 6'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  dahdi-kernel-stable:
    runs-on: ubuntu-24.04
    name: DAHDI, stable kernel
    container: debian:12
    strategy:
      fail-fast: false
      matrix:
        kernel_branch: [
          'linux-4.19.y',
          'linux-5.19.y',
          'linux-6.1.y',
          'linux-6.8.y',
          'linux-6.9.y',
          'linux-6.10.y',
          'linux-6.11.y',
          'linux-rolling-lts'
          ]
    steps:
     - name: Install packages
       run: |
          apt-get -y update
          apt-get -y upgrade
          apt-get -y install git gcc make perl-modules flex bison wget libssl-dev libelf-dev bc
     - name: Clone kernel
       run: |
          cd /usr/src
          git clone --depth 1 --branch ${{matrix.kernel_branch}} git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git
     - name: Build kernel
       run: |
          cd /usr/src/linux
          make -j$(nproc) kernelversion
          make -j$(nproc) x86_64_defconfig
          make -j$(nproc) modules_prepare
          make -j$(nproc)
          make -j$(nproc) modules
     - name: Checkout
       uses: actions/checkout@v4
     - name: Build DAHDI
       run: |
           ./phreaknet.sh make
           GIT_REPO_PATH=${GITHUB_WORKSPACE} KSRC=/usr/src/linux phreaknet dahdi --drivers
  dahdi-nonfatal-stable:
    runs-on: ubuntu-24.04
    name: DAHDI, nonfatal, stable kernel
    container: debian:12
    strategy:
      fail-fast: false
      matrix:
        # This patch doesn't revert cleanly in 6.12 through 6.14, but that's fine as long as we test newer kernels
        kernel_branch: [
          'linux-6.15.y',
          'linux-rolling-stable'
          ]
    steps:
     - name: Install packages
       run: |
          apt-get -y update
          apt-get -y upgrade
          apt-get -y install git gcc make perl-modules flex bison wget libssl-dev libelf-dev bc curl
     - name: Clone kernel
       run: |
          cd /usr/src
          git clone --depth 1 --branch ${{matrix.kernel_branch}} git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git
     # We download the objtool patch from GitLab instead of GitHub, to avoid its stupid and unpredictable rate limits in the CI
     - name: Revert objtool patch
       run: |
          cd /usr/src/linux
          curl -f -o "/tmp/objtool.patch" "https://gitlab.com/linux-kernel/linux-next/-/commit/0b10177114d1e434af850b377cf5e6620dd1d525.patch"
          cat /tmp/objtool.patch
          patch -u -b -p 1 --reverse -i /tmp/objtool.patch
     - name: Build kernel
       run: |
          cd /usr/src/linux
          make -j$(nproc) kernelversion
          make -j$(nproc) x86_64_defconfig
          make -j$(nproc) modules_prepare
          make -j$(nproc)
          make -j$(nproc) modules
     - name: Checkout
       uses: actions/checkout@v4
     - name: Build DAHDI
       run: |
           ./phreaknet.sh make
           GIT_REPO_PATH=${GITHUB_WORKSPACE} KSRC=/usr/src/linux phreaknet dahdi --drivers
  dahdi-nonfatal-mainline:
    runs-on: ubuntu-24.04
    name: DAHDI, nonfatal, mainline kernel
    container: debian:12
    steps:
     - name: Install packages
       run: |
          apt-get -y update
          apt-get -y upgrade
          apt-get -y install git gcc make perl-modules flex bison wget libssl-dev libelf-dev bc curl
     - name: Clone kernel
       run: |
          cd /usr/src
          git clone --depth 1 git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
     - name: Revert objtool patch
       run: |
          cd /usr/src/linux
          curl -f -o "/tmp/objtool.patch" "https://gitlab.com/linux-kernel/linux-next/-/commit/0b10177114d1e434af850b377cf5e6620dd1d525.patch"
          patch -u -b -p 1 --reverse -i /tmp/objtool.patch
     - name: Build kernel
       run: |
          cd /usr/src/linux
          make -j$(nproc) kernelversion
          make -j$(nproc) x86_64_defconfig
          make -j$(nproc) modules_prepare
          make -j$(nproc)
          make -j$(nproc) modules
     - name: Checkout
       uses: actions/checkout@v4
     - name: Build DAHDI
       run: |
           ./phreaknet.sh make
           GIT_REPO_PATH=${GITHUB_WORKSPACE} KSRC=/usr/src/linux phreaknet dahdi --drivers
  dahdi-nonfatal-next:
    runs-on: ubuntu-24.04
    name: DAHDI, nonfatal, next kernel
    container: debian:12
    steps:
     - name: Install packages
       run: |
          apt-get -y update
          apt-get -y upgrade
          apt-get -y install git gcc make perl-modules flex bison wget libssl-dev libelf-dev bc curl
     - name: Clone kernel
       run: |
          cd /usr/src
          git clone --depth 1 git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
     - name: Revert objtool patch
       run: |
          cd /usr/src/linux-next
          curl -f -o "/tmp/objtool.patch" "https://gitlab.com/linux-kernel/linux-next/-/commit/0b10177114d1e434af850b377cf5e6620dd1d525.patch"
          patch -u -b -p 1 --reverse -i /tmp/objtool.patch
     - name: Build kernel
       run: |
          cd /usr/src/linux-next
          make -j$(nproc) kernelversion
          make -j$(nproc) x86_64_defconfig
          make -j$(nproc) modules_prepare
          make -j$(nproc)
          make -j$(nproc) modules
     - name: Checkout
       uses: actions/checkout@v4
     - name: Build DAHDI
       run: |
           ./phreaknet.sh make
           GIT_REPO_PATH=${GITHUB_WORKSPACE} KSRC=/usr/src/linux-next phreaknet dahdi --drivers
  dahdi-next-fortified:
    runs-on: ubuntu-24.04
    name: DAHDI, fortified
    container: fedora:42
    steps:
     - name: Install packages
       run: |
          dnf -y update
          dnf -y upgrade
          dnf -y install git gcc make flex bison wget openssl-devel elfutils-libelf-devel bc curl
     - name: Clone kernel
       run: |
          cd /usr/src
          git clone --depth 1 git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
     - name: Revert objtool patch
       run: |
          cd /usr/src/linux-next
          dnf -y install patch
          curl -f -o "/tmp/objtool.patch" "https://gitlab.com/linux-kernel/linux-next/-/commit/0b10177114d1e434af850b377cf5e6620dd1d525.patch"
          patch -u -b -p 1 --reverse -i /tmp/objtool.patch
     - name: Build kernel
       run: |
          cd /usr/src/linux-next
          make -j$(nproc) kernelversion
          make -j$(nproc) x86_64_defconfig
          gcc -v
          ./scripts/config --set-val CONFIG_FORTIFY_SOURCE y
          make -j$(nproc) modules_prepare
          cat .config
          make -j$(nproc)
          make -j$(nproc) modules
     - name: Checkout
       uses: actions/checkout@v4
     - name: Build DAHDI
       run: |
           ./phreaknet.sh make
           GIT_REPO_PATH=${GITHUB_WORKSPACE} KSRC=/usr/src/linux-next phreaknet dahdi --drivers
  ubuntu-latest:
    runs-on: ubuntu-24.04
    name: Ubuntu 24.04
    steps:
     - name: Checkout
       uses: actions/checkout@v4
     - name: Build DAHDI and Asterisk
       run: |
          sudo ./phreaknet.sh make
          sudo GIT_REPO_PATH=${{ github.workspace }} phreaknet install --fast --dahdi --drivers --devmode --sip
  ubuntu-stable:
    runs-on: ubuntu-22.04
    name: Ubuntu 22.04
    steps:
     - name: Checkout
       uses: actions/checkout@v4
     - name: Build DAHDI and Asterisk
       run: |
          sudo ./phreaknet.sh make
          # Environment variables don't carry through with sudo
          sudo GIT_REPO_PATH=${{ github.workspace }} phreaknet install --fast --dahdi --drivers --devmode --sip
  debian-stable-asterisk-lts:
    runs-on: ubuntu-24.04
    name: Debian 12, Asterisk 20
    container: debian:12
    steps:
      - uses: actions/checkout@v4
      - name: Build DAHDI and Asterisk
        run: |
          ./phreaknet.sh make
          GIT_REPO_PATH=${GITHUB_WORKSPACE} phreaknet install --fast --dahdi --drivers --sip --testsuite --version=20
      - name: Run tests
        run: |
          phreaknet runtests
  debian-stable-asterisk-latest:
    runs-on: ubuntu-24.04
    name: Debian 12
    container: debian:12
    steps:
      - uses: actions/checkout@v4
      - name: Build DAHDI and Asterisk
        run: |
          ./phreaknet.sh make
          GIT_REPO_PATH=${GITHUB_WORKSPACE} phreaknet install --fast --dahdi --drivers --sip --testsuite
      - name: Run tests
        run: |
          phreaknet runtests
  debian-stable-asterisk-latest-unpatched:
    runs-on: ubuntu-24.04
    name: Debian 12, vanilla Asterisk
    container: debian:12
    steps:
      - uses: actions/checkout@v4
      - name: Build DAHDI and Asterisk
        run: |
          ./phreaknet.sh make
          GIT_REPO_PATH=${GITHUB_WORKSPACE} phreaknet install --fast --dahdi --devmode --sip --vanilla --user=asterisk
  debian-stable-asterisk-master:
    runs-on: ubuntu-24.04
    name: Debian 12, wanpipe, Asterisk master
    container: debian:12
    steps:
      - uses: actions/checkout@v4
      - name: Build DAHDI and Asterisk
        run: |
          ./phreaknet.sh make
          GIT_REPO_PATH=${GITHUB_WORKSPACE} phreaknet install --fast --dahdi --drivers --wanpipe --sip --testsuite --version=master
  debian-dahdi-minimal:
    runs-on: ubuntu-24.04
    name: Debian 12, without libpri and libss7
    container: debian:12
    steps:
      - uses: actions/checkout@v4
      - name: Build DAHDI (without libpri or libss7) and Asterisk (chan_dahdi)
        run: |
          ./phreaknet.sh make
          GIT_REPO_PATH=${GITHUB_WORKSPACE} INSTALL_LIBPRI=0 INSTALL_LIBSS7=0 phreaknet install --fast --dahdi --autokvers --drivers --devmode --lightweight --vanilla
  alpine-linux:
    runs-on: ubuntu-24.04
    name: Alpine Linux
    container: alpine:latest
    steps:
      - uses: actions/checkout@v4
      - name: Build DAHDI and Asterisk
        run: |
          ./phreaknet.sh make
          GIT_REPO_PATH=${GITHUB_WORKSPACE} phreaknet install --fast --dahdi --autokvers --drivers --devmode
  alma-9-5:
    runs-on: ubuntu-24.04
    name: Alma Linux 9.5
    container: almalinux:9.5
    steps:
      - uses: actions/checkout@v4
      - name: Build DAHDI and Asterisk
        run: |
          ./phreaknet.sh make
          GIT_REPO_PATH=${GITHUB_WORKSPACE} phreaknet install --fast --dahdi --autokvers --drivers --devmode
  rocky-96:
    runs-on: ubuntu-24.04
    name: Rocky Linux 9.6
    container: rockylinux:9
    steps:
      - uses: actions/checkout@v4
      - name: Build DAHDI and Asterisk
        run: |
          dnf install -y git tar
          ./phreaknet.sh make
          cat /etc/rocky-release
          GIT_REPO_PATH=${GITHUB_WORKSPACE} phreaknet install --fast --dahdi --autokvers --drivers --devmode
  rocky-93:
    runs-on: ubuntu-24.04
    name: Rocky Linux 9.3
    container: rockylinux:9.3
    steps:
      - uses: actions/checkout@v4
      - name: Build DAHDI and Asterisk
        run: |
          ./phreaknet.sh make
          GIT_REPO_PATH=${GITHUB_WORKSPACE} phreaknet install --fast --dahdi --autokvers --drivers --devmode
  rocky-89:
    runs-on: ubuntu-24.04
    name: Rocky Linux 8.9
    container: rockylinux:8.9
    steps:
      - uses: actions/checkout@v4
      - name: Build DAHDI and Asterisk
        run: |
          ./phreaknet.sh make
          GIT_REPO_PATH=${GITHUB_WORKSPACE} phreaknet install --fast --dahdi --autokvers --drivers --devmode
  opensuse:
    runs-on: ubuntu-24.04
    name: openSUSE Tumbleweed
    container: opensuse/tumbleweed
    steps:
      - uses: actions/checkout@v4
      - name: Build Asterisk
        run: |
          ./phreaknet.sh make
          GIT_REPO_PATH=${GITHUB_WORKSPACE} phreaknet install --fast --devmode --sip
# FreeBSD CI disabled since libuuid headers can't get installed in CI?
#  freebsd-14:
#    runs-on: ubuntu-24.04
#    name: FreeBSD
#    steps:
#      - uses: actions/checkout@v4
#      - name: Build Asterisk
#        uses: vmactions/freebsd-vm@v1
#        with:
#          usesh: true
#          run: |
#            ./phreaknet.sh make
#            phreaknet install --fast --devmode --sip
